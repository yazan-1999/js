// let users = ["Vova", "Tanea","Aleana", "Vasilii"]
///фильтры 1 способ
// users_f = []
// for (let i = 0; i < users.length; i++){
//   if (users[i][0] =="V" ) {
//     users_f.push(users[i])
//   }
// }

// console.log("befor", users)
// console.log("after", users_f)

///2 способ
//users_f = users.filter(value => value[0] == "V")//в переменную users_f вставь  масив user c методом фильтр который заходит в кажое значение масива и это значение заходит в переменную  VALUE и вставит значение из переменной VALUE в переменную users_f,  внутри прописоваем условие  (VALUE переменная которя вставиться в переменю users_f , и пока что являеться значанием каждым значением из масива users  => если VALUE[индекс буквы ] == "V" то тогда оставь его и перекинь в новый масив под названием  users_f )
//.filter(value => value.length >= 5)//можем также добовлять фильтер который проверяет на длинну слова

///////////////////////////////////////////////////////////////
// ///сартеровка
// console.log("befor", users)
// users.sort()// сартерует все части масива в алфовитном порядке
// console.log("after", users)
/////////////////////////////////////////
//сартеровка славоря в алфовитном порядке вариянт 1
let users = [
  { name: "Vova" }, 
  { name: "Tanea" },
  { name: "Aleana" }, 
  { name: "Vasilii" }
]


console.log("befor", users)
users.sort((u1, u2) => { //данная функция срканииваеть по очереди 1 значение с 2 значением
  if (u1.name > u2.name) {//если имя 1 пользователя меньше чем имя 2 поьзователя то верни 1 
    return 1
  }
  if (u1.name == u2.name) {//если имя 1 пользователя равно имя 2 поьзователя то верни 0
    return 0
  }
  if (u1.name < u2.name) {//если имя 1 пользователя больше чем имя 2 поьзователя то верни -1 
    return -1
  }
  
  
} )
console.log("after", users)

users.sort((u1, u2) => u2.name.length - u1.name.length) //от самого длинного именни юзера к самому каротками принеп веса чем он больше (число) тем он идет выше

console.log(users)